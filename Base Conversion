""" Prompt: In a file named base_convert.py, write a recursive function named convert() that will take a non-negative integer num (base 10) and a base b (integer from 2 to 16) and return a string representing the base b number.
Note that for bases > 10, the symbols used for 10, 11, 12, 13, 14, 15 are A, B, C, D, E, F respectively. """

def convert(num, b):
    """Recursive function that returns a string representing num in the base b"""
    remainder = num % b #determining the remainder
    if b > 10: #the relevant 2 digit remainders are replaced with the letter that they correlate to
        list = ['A', 'B', 'C', 'D', 'E', 'F']
        for i in range(6):
            if (num % b - 10) == i:
                remainder = list[i]

    if num // b == 0: #base condition
        return "{}".format(remainder)
    else: #the recursive part of the function where the remainders are concatenated together to form the answer
        answer = convert(num // b, b) + "{}".format(remainder)
        return answer

